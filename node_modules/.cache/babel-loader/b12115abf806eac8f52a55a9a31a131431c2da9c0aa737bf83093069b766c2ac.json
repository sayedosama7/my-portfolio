{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programing\\\\my portoflio\\\\src\\\\Components\\\\Header.js\";\nimport React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { TypeAnimation } from 'react-type-animation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-5 mt-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"hi, i'm sayed osama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n            sequence: ['i\\'m',\n            // Types 'One'\n            1000,\n            // Waits 1s\n            'Front End Developer',\n            // Deletes 'One' and types 'Two'\n            2000,\n            // Waits 2s\n            'i\\'m Front End Developer',\n            // Types 'Three' without deleting 'Two'\n            () => {\n              console.log('Sequence completed');\n            }],\n            wrapper: \"span\",\n            cursor: true,\n            repeat: Infinity,\n            style: {\n              fontSize: '5em',\n              display: 'inline-block',\n              color: '#fff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid rounded\",\n            src: \"images/my-photo.jpeg\",\n            alt: \"my-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Col","Container","Row","TypeAnimation","jsxDEV","_jsxDEV","Header","children","className","fileName","_jsxFileName","lineNumber","columnNumber","md","sequence","console","log","wrapper","cursor","repeat","Infinity","style","fontSize","display","color","src","alt","_c","$RefreshReg$"],"sources":["E:/Programing/my portoflio/src/Components/Header.js"],"sourcesContent":["import React from 'react'\r\nimport { Col, Container, Row } from 'reactstrap'\r\nimport {TypeAnimation} from 'react-type-animation';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <div className='pt-5 mt-5'></div>\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"8\">\r\n                        <p>hi, i'm sayed osama</p>\r\n \r\n\r\n                        <TypeAnimation\r\n                            sequence={[\r\n                                'i\\'m', // Types 'One'\r\n                                1000, // Waits 1s\r\n                                'Front End Developer', // Deletes 'One' and types 'Two'\r\n                                2000, // Waits 2s\r\n                                'i\\'m Front End Developer', // Types 'Three' without deleting 'Two'\r\n                                () => {\r\n                                    console.log('Sequence completed');\r\n                                },\r\n                            ]}\r\n                            wrapper=\"span\"\r\n                            cursor={true}\r\n                            repeat={Infinity}\r\n                            style={{ fontSize: '5em', display: 'inline-block' , color:'#fff' }}\r\n                        />\r\n\r\n                    </Col>\r\n\r\n                    <Col md=\"4\">\r\n                        <img className='img-fluid rounded' src='images/my-photo.jpeg' alt='my-img' />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAQ,YAAY;AAChD,SAAQC,aAAa,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAKG,SAAS,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjCP,OAAA,CAACJ,SAAS;MAAAM,QAAA,eACNF,OAAA,CAACH,GAAG;QAAAK,QAAA,gBACAF,OAAA,CAACL,GAAG;UAACa,EAAE,EAAC,GAAG;UAAAN,QAAA,gBACPF,OAAA;YAAAE,QAAA,EAAG;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAG1BP,OAAA,CAACF,aAAa;YACVW,QAAQ,EAAE,CACN,MAAM;YAAE;YACR,IAAI;YAAE;YACN,qBAAqB;YAAE;YACvB,IAAI;YAAE;YACN,0BAA0B;YAAE;YAC5B,MAAM;cACFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;YACrC,CAAC,CACH;YACFC,OAAO,EAAC,MAAM;YACdC,MAAM,EAAE,IAAK;YACbC,MAAM,EAAEC,QAAS;YACjBC,KAAK,EAAE;cAAEC,QAAQ,EAAE,KAAK;cAAEC,OAAO,EAAE,cAAc;cAAGC,KAAK,EAAC;YAAO;UAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC,eAENP,OAAA,CAACL,GAAG;UAACa,EAAE,EAAC,GAAG;UAAAN,QAAA,eACPF,OAAA;YAAKG,SAAS,EAAC,mBAAmB;YAACiB,GAAG,EAAC,sBAAsB;YAACC,GAAG,EAAC;UAAQ;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd,CAAC;AAAAe,EAAA,GApCKrB,MAAM;AAsCZ,eAAeA,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}